@page "/registration"
@using Microsoft.AspNetCore.WebUtilities;
@inject IAuthService authService;
@inject NavigationManager navigationManager;

<h3>Registration</h3>

<style>
    /*    Hides the navmenu on this page    */
    .navmenu {
        display: none;
    }
</style>

<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <div class="mb-3 col-3">
        <label for="email">Email</label>
        <input type="text" id="email" @bind-value="user.Email" @bind-value:event="oninput" class="form-control " />
        <ValidationMessage For="@(() => user.Email)" />
    </div>
    <div class="mb-3 col-3">
        <label for="password">Password</label>
        <input type="password" id="password" @bind-value="user.Password" @bind-value:event="oninput" class="form-control" />
        <ValidationMessage For="@(() => user.Password)" />
    </div>
    <div class="mb-3 col-3">
        <label for="confirmPassword">Confirm Password</label>
        <input type="password" id="confirmPassword" @bind-value="user.ConfirmPassword" @bind-value:event="oninput" class="form-control" />
        <ValidationMessage For="@(() => user.ConfirmPassword)" />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
    <div class="mt-5 @MessageCssClass">
        <div>@Message</div>
    </div>
</EditForm>

@code {
    UserRegister user = new UserRegister();

    string Message = string.Empty;
    string MessageCssClass = string.Empty;



    async Task HandleRegistration()
    {
        var result = await authService.Register(user);
        Message = result.Message;
        if (!result.Success)
        {
            MessageCssClass = "message-danger";
        }
        else
        {
            MessageCssClass = "message-success";
            navigationManager.NavigateTo("/organization-selection");
            StateHasChanged();
        }
    }
}
