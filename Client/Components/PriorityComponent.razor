<select @bind-value="Task.PriorityLevel" @bind-value:event="onchange" @onfocus="@ChildClicked">
    @foreach (var priority in priorities)
    {
        <option value="@priority">@SplitCamelCase(priority.ToString())</option>
    }
</select>

@code {

    [Parameter]
    public NoteModel Task { get; set; }

    public bool IsClicked { get; set; }

    Array priorities;

    [Parameter]
    public EventCallback<bool> OnClick { get; set; }

    async void ChildClicked()
    {
        IsClicked = true;
        await OnClick.InvokeAsync(IsClicked);
    }

    protected override async Task OnInitializedAsync()
    {
        priorities = Enum.GetValues(typeof(Priority));
        await base.OnInitializedAsync();
    }

     public static string SplitCamelCase(string input)
    {
        return System.Text.RegularExpressions.Regex.Replace(input, "([A-Z])", " $1", System.Text.RegularExpressions.RegexOptions.Compiled).Trim();
    }

}
