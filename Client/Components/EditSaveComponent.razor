@using Tasky.Client.Services
@using static Tasky.Shared.NoteModel
@inject IJSRuntime JS
@inject IMemberService memberService;
@inject ITaskService taskService;


<div class="d-flex align-items-center justify-content-center">

    @if (Task.TaskId > 0)
    {
        <MudFab Color="Color.Info" id="editButton" Size="Size.Small" StartIcon="@Icons.Material.Filled.Create" DisableElevation="true" @onclick="(()=> EditTask(Task))" />
    }
    else
    {
        <MudFab Color="Color.Tertiary" id="saveButton" Size="Size.Small" StartIcon="@Icons.Material.Filled.Save" DisableElevation="true" @onclick="(() => SaveTask(Task))" />
    }
</div>



@code {


    [Parameter]
    public NoteModel Task { get; set; }

    [Parameter]
    public EventCallback RefreshList { get; set; }


    public bool IsClicked { get; set; }

    [Parameter]
    public EventCallback<bool> OnClick { get; set; }

    async void ChildClicked()
    {
        IsClicked = false;
        await OnClick.InvokeAsync(IsClicked);
    }

    async void SaveTask(NoteModel task)
    {
        await taskService.AddTask(task);
        ChildClicked();
        await RefreshList.InvokeAsync();
    }

    async void EditTask(NoteModel task)
    {
        await taskService.UpdateTask(task);
        ChildClicked();
        await RefreshList.InvokeAsync();
    }





}
